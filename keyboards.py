from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types.switch_inline_query_chosen_chat import SwitchInlineQueryChosenChat

def main_menu(lang: str, has_active: bool=False, has_history: bool=False) -> InlineKeyboardMarkup:
    t = {"ru": ("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "üëõ –ö–æ—à–µ–ª—ë–∫", "üì¶ –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É", "üü° –¢–µ–∫—É—â–∞—è —Å–¥–µ–ª–∫–∞", "üóÇ –ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫"), "en": ("‚öôÔ∏è Settings", "üëõ Wallet", "üì¶ Create deal", "üü° Current deal", "üóÇ Deal history")}[lang]
    rows = [[InlineKeyboardButton(text=t[0], callback_data="settings")],[InlineKeyboardButton(text=t[1], callback_data="wallet")],[InlineKeyboardButton(text=t[2], callback_data="create")]]
    if has_active:
        rows.append([InlineKeyboardButton(text=t[3], callback_data="current")])
    if has_history:
        rows.append([InlineKeyboardButton(text=t[4], callback_data="history")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def back_to_menu(lang: str) -> InlineKeyboardMarkup:
    txt = "‚Ü©Ô∏è –í –º–µ–Ω—é" if lang == "ru" else "‚Ü©Ô∏è Menu"
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=txt, callback_data="menu")]])

def lang_menu() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru"), InlineKeyboardButton(text="üá¨üáß English", callback_data="lang_en")],[InlineKeyboardButton(text="‚Ü©Ô∏è –í –º–µ–Ω—é / Menu", callback_data="menu")]])

def create_nav(lang: str, step: int) -> InlineKeyboardMarkup:
    prev_txt = "‚¨ÖÔ∏è –ü—Ä–µ–¥" if lang=="ru" else "‚¨ÖÔ∏è Prev"
    next_txt = "‚û°Ô∏è –°–ª–µ–¥" if lang=="ru" else "‚û°Ô∏è Next"
    cancel_txt = "‚õîÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å" if lang=="ru" else "‚õîÔ∏è Cancel"
    menu_txt = "‚Ü©Ô∏è –í –º–µ–Ω—é" if lang=="ru" else "‚Ü©Ô∏è Menu"
    rows = []
    if step > 1:
        rows.append([InlineKeyboardButton(text=prev_txt, callback_data="create_prev")])
    rows.append([InlineKeyboardButton(text=next_txt, callback_data="create_next")])
    rows.append([InlineKeyboardButton(text=cancel_txt, callback_data="create_cancel")])
    rows.append([InlineKeyboardButton(text=menu_txt, callback_data="menu")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def final_actions(lang: str, deal_id: str) -> InlineKeyboardMarkup:
    send_txt = "üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É" if lang=="ru" else "üì© Send to seller"
    cancel_txt = "‚õîÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å –æ—Ä–¥–µ—Ä" if lang=="ru" else "‚õîÔ∏è Cancel order"
    menu_txt = "‚Ü©Ô∏è –í –º–µ–Ω—é" if lang=="ru" else "‚Ü©Ô∏è Menu"
    sic = SwitchInlineQueryChosenChat(query=f"deal_{deal_id}", allow_user_chats=True, allow_bot_chats=False, allow_group_chats=True, allow_channel_chats=False)
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=send_txt, switch_inline_query_chosen_chat=sic)],[InlineKeyboardButton(text=cancel_txt, callback_data=f"deal:{deal_id}:stop")],[InlineKeyboardButton(text=menu_txt, callback_data="menu")]])

def seller_controls(lang: str, deal_id: str) -> InlineKeyboardMarkup:
    texts = {"ru": ("‚õîÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ä–¥–µ—Ä", "‚úÖ –Ø –ø–µ—Ä–µ–≤—ë–ª(–∞) –ø–æ–¥–∞—Ä–∫–∏"), "en": ("‚õîÔ∏è Stop order", "‚úÖ I sent the gifts")}[lang]
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=texts[0], callback_data=f"deal:{deal_id}:stop")],[InlineKeyboardButton(text=texts[1], callback_data=f"deal:{deal_id}:confirm")]])
